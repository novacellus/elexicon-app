<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:lmilp="http://scriptores.pl/" version="2.0"><xsl:key name="fons" match="tei:bibl" use="@xml:id"/><xsl:key name="abbr" match="tei:choice" use="@xml:id"/><xsl:output method="html" exclude-result-prefixes="#all" xml:space="preserve"/><xsl:template match="tei:emph"><xsl:element name="em"><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:entryFree"><xsl:element name="div"><xsl:attribute name="class" select="'entry'"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:form"><xsl:element name="span"><xsl:attribute name="class" select="'form'"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:orth"><xsl:element name="strong"><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:iType[normalize-space(.) ne '']"><xsl:variable name="iType_norm"><xsl:value-of select="./ancestor::tei:form/tei:iType/@norm"/></xsl:variable><xsl:element name="abbr"><xsl:attribute name="class" select="'iType'"/><xsl:attribute name="title" select="$iType_norm"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:gen"><xsl:element name="abbr"><xsl:attribute name="class" select="'gen'"/><xsl:attribute name="title" select="key('abbr',concat(normalize-space(.),'gram'),doc('../data/helper/abbreviationes.xml'))/tei:expan[@xml:lang='la']/text()"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:list[@type='vocabularia']"><xsl:element name="ul"><xsl:attribute name="class" select="'vocabularia'"/><xsl:for-each select="tei:item"><li class="'vocabularium'"><xsl:apply-templates/></li></xsl:for-each></xsl:element></xsl:template><xsl:template match="tei:etym"><xsl:element name="span"><xsl:attribute name="class" select="'etym'"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:note[parent::tei:etym]"><xsl:element name="span"><xsl:attribute name="class" select="'note.etym'"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:note[ancestor::tei:list[@type ='vocabularia']]"><xsl:element name="span"><xsl:attribute name="class" select="'note.vocabularia'"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:mentioned"><xsl:element name="span"><xsl:attribute name="class" select="'mentioned'"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:sense"><xsl:variable name="numbering_ancestors"><xsl:value-of select="if (ancestor::tei:sense) then ( concat(string-join(./ancestor::tei:sense/@n,'_'),'_') ) else ()"/></xsl:variable><xsl:variable name="numbering"><xsl:choose><xsl:when test="@n ne ''"><xsl:value-of select="@n"/></xsl:when><xsl:otherwise><xsl:value-of select="'0'"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:element name="div"><xsl:attribute name="class" select="'sense'"/><xsl:attribute name="id"><xsl:value-of select="concat(if($numbering_ancestors) then ($numbering_ancestors) else (),'sense_',$numbering)"/></xsl:attribute><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:def"><xsl:element name="span"><xsl:attribute name="class" select="concat('def','_',@xml:lang)"/><xsl:attribute name="lang" select="@xml:lang"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:cit"><xsl:if test="tei:quote and not(./@type = 'inline')"><xsl:choose>
                <!-- Cytaty w grupie anomalii --><xsl:when test="ancestor::tei:note[@type = 'anomale']"><xsl:element name="span"><xsl:attribute name="class" select="'cit'"/><xsl:apply-templates/></xsl:element></xsl:when><xsl:otherwise><xsl:element name="blockquote"><xsl:attribute name="class" select="'cit'"/><xsl:apply-templates/></xsl:element></xsl:otherwise></xsl:choose></xsl:if><xsl:if test="(./@type = 'inline')or not(tei:quote)"><xsl:element name="span"><xsl:attribute name="class" select="'cit'"/><xsl:apply-templates/></xsl:element></xsl:if></xsl:template><xsl:template match="tei:add[@type eq 'quote_addition']"><xsl:element name="em"><xsl:attribute name="class" select="'add'"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:bibl"><xsl:element name="span"><xsl:attribute name="class" select="bibl"/><xsl:apply-templates/><xsl:text> </xsl:text></xsl:element></xsl:template><xsl:template match="tei:ref[@type='cf']"><xsl:variable name="link1" select="'?what='"/><xsl:variable name="link2" select="substring-after(@target,'lemma:')"/><i class="fa fa-hand-o-right"/><a href="{concat($link1,$link2)}" target="_blank" class="ref"><xsl:value-of select="concat(' ',.)"/></a></xsl:template><xsl:template match="tei:ref[@type='siglum']"><xsl:variable name="title"><xsl:value-of select="                 if(key('fons', substring-after(@target,'fons:'), doc('../data/helper/fontes.xml')))                  then(key ('fons', substring-after(@target,'fons:'),                  doc('../data/helper/fontes.xml') )/tei:title[not(@type = 'abbr')] )                 else(                 if (key('fons', substring-before(substring-after(@target,'fons:'),'#'),                 doc('../data/helper/fontes.xml')))                 then ( concat(                 ( key ('fons', substring-before(substring-after(@target,'fons:'),'#'),                 doc('../data/helper/fontes.xml') )/tei:title[not(@type = 'abbr')] ) ,                 ' ',                 substring-after(substring-after(@target,'fons:'),'#')                 )                 )                 else ('sigla')                 )"/></xsl:variable><xsl:element name="span"><xsl:attribute name="class" select="'siglum'"/><xsl:element name="abbr"><xsl:attribute name="title" select="$title"/><xsl:apply-templates/></xsl:element></xsl:element></xsl:template><xsl:template match="tei:label|tei:ref[@type='vocabularia']"><xsl:variable name="target" select="if ( key ('abbr', substring-after(@target,'abbr:'), doc('../data/helper/abbreviationes.xml') ) ) then ( key ('abbr', substring-after(@target,'abbr:'), doc('../data/helper/abbreviationes.xml') )/tei:expan[@xml:lang='la']/text() ) else('abbreviatio')"/><xsl:choose><xsl:when test="self::tei:label[@type='biblScope']"><xsl:element name="abbr"><xsl:attribute name="title" select="$target"/><xsl:apply-templates/><xsl:text> </xsl:text></xsl:element></xsl:when><xsl:when test="self::tei:ref[@type='vocabularia']"><xsl:element name="abbr"><xsl:attribute name="title" select="concat('wyraz notowany w: ',$target)"/><xsl:apply-templates/><xsl:text> </xsl:text></xsl:element></xsl:when><xsl:when test="self::tei:label[@type='numbering']"><xsl:element name="span"><xsl:attribute name="class" select="'numbering'"/><xsl:apply-templates/><xsl:text> </xsl:text></xsl:element></xsl:when><xsl:when test="self::tei:label[@type='note']"><xsl:element name="span"><xsl:attribute name="class" select="'note_sign'"/><xsl:attribute name="class" select="'note_sign'"/><xsl:apply-templates/><xsl:text> </xsl:text></xsl:element></xsl:when><xsl:otherwise><xsl:element name="em"><xsl:apply-templates/></xsl:element><xsl:text> </xsl:text></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="tei:usg"><xsl:choose><xsl:when test="@type = 'dom'"><xsl:element name="span"><xsl:attribute name="class" select="'domain-label'"/><xsl:apply-templates/><xsl:text> </xsl:text></xsl:element></xsl:when><xsl:when test="@type = 'colloc'"><xsl:element name="span"><xsl:attribute name="class" select="'colloc-label'"/><xsl:apply-templates/><xsl:text> </xsl:text></xsl:element></xsl:when></xsl:choose></xsl:template>
    <!--Constr. block: prepositional collocations--><xsl:template match="tei:gram[@type = 'collocPrep']"><xsl:element name="span"><xsl:attribute name="class" select="'collocPrep-label'"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:note"><xsl:if test="self::*[@type ne 'anomale']"><xsl:element name="div"><xsl:attribute name="class" select="'note_container'"/><xsl:element name="i"><xsl:attribute name="class" select="'fa fa-eye note_sign'"/></xsl:element><xsl:apply-templates select="tei:label[@type='note']"/><xsl:element name="div"><xsl:attribute name="class" select="'note'"/><xsl:apply-templates select="(node()|text()) except tei:label[@type='note']"/></xsl:element></xsl:element></xsl:if><xsl:if test="self::*[@type eq 'anomale']"><xsl:element name="a"><xsl:element name="i"><xsl:attribute name="class" select="'fa fa-asterisk anomale-expand'"/></xsl:element></xsl:element><xsl:element name="div"><xsl:attribute name="class" select="'anomale'"/><xsl:apply-templates select="node()" mode="#current"/></xsl:element></xsl:if></xsl:template><xsl:template match="tei:gloss[@xml:lang = 'pl']"><xsl:element name="span"><xsl:attribute name="class" select="'gloss_pl'"/><xsl:attribute name="title" select="'glossa Polona'"/><xsl:apply-templates/></xsl:element></xsl:template><xsl:template match="tei:note[ancestor::tei:quote]"><xsl:element name="span"><xsl:attribute name="class" select="'inline_note'"/><xsl:apply-templates/></xsl:element></xsl:template>
<!--    <xsl:template match="tei:milestone">
        <xsl:if test="self::*[@unit eq 'lb'][preceding::*[1][self::text()] ]">
            <xsl:text> </xsl:text>
        </xsl:if>
    </xsl:template>--></xsl:stylesheet>